<!-- 
::: {=html}
<style>
/* Inside your <style> section */
body {
  background-color: black;
  color: white;
  font-family: sans-serif;
  margin: 0;
  padding: 60px 0 0 0; /* Add top padding for navbar */
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Optional: add specific navbar styling for the index page */
#quarto-header {
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 1000;
}

.container {
  max-width: 800px;
  padding: 2em;
  display: flex;
  flex-direction: column;
  gap: 1.5em;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 1;
}

.counter {
  font-size: 3em;
  color: #e32d2d;
  font-weight: bold;
  display: inline;
  line-height: 1.2;
}

.message {
  font-size: 1.8em;
  opacity: 0;
  transition: opacity 1.5s ease-in;
}

#first-container, #second-container {
  transition: opacity 2s ease-in-out;
  width: 100%;
}

.second-phase {
  line-height: 1.6;
}

.navbar {
  background-color: black !important;
}

.navbar-title, .nav-link, ._site {
  color: #e32d2d !important;
}

.navbar-title:hover, .nav-link:hover {
  color: #ff6b6b !important;
}

.navbar-logo {
  filter: invert(1);
}
</style>

<div class="container" id="first-container">
  <p class="message" id="message1">
    Since 1997, <span class="counter" id="counter1">0</span> humanitarian aid workers have been affected by violence against aid workers.
  </p>
  
  <p class="message" id="message2">
    But <span class="counter" id="counter2">0</span> total people have been affected.
  </p>
  
  <p class="message" id="message3">
    These acts of violence do not only hurt selfless humanitarian aid workers. At a greater scale, they hurt innocent civilians.
  </p>
</div>

<div class="container" id="second-container" style="opacity: 0;">
  <p class="message second-phase" id="message4">
    Limited resources have long prevented global organizations from fully capturing the truth behind attacks on humanitarian missions.
  </p>
  
  <p class="message second-phase" id="message5">
    But behind every missing detail is a missed opportunity to prepare, to protect, to prevent.
  </p>
  
  <p class="message second-phase" id="message6">
    To minimize the harm, we must uncover the patterns hidden in the data—and come together, as a global force, to turn insight into action.
  </p>
</div>

<script src="https://cdn.jsdelivr.net/npm/countup.js@2.0.7/dist/countUp.umd.js"></script>
<script>
  document.addEventListener("DOMContentLoaded", function() {
    // Set up counters
    const counter1 = new countUp.CountUp('counter1', 766, {
      startVal: 1,
      duration: 3,
      separator: ',',
      useEasing: true
    });
    
    const counter2 = new countUp.CountUp('counter2', 7316, {
      startVal: 1,
      duration: 3,
      separator: ',',
      useEasing: true
    });
    
    // Function to show message and start counter if it has one
    function showMessage(messageId, counterId) {
      const message = document.getElementById(messageId);
      message.style.opacity = 1;
      
      if (counterId) {
        const counter = counterId === 'counter1' ? counter1 : counter2;
        if (!counter.error) {
          counter.start();
        } else {
          console.error(counter.error);
        }
      }
    }
    
    // Function to hide element
    function hideElement(elementId) {
      const element = document.getElementById(elementId);
      element.style.opacity = 0;
    }
    
    // Function to show element
    function showElement(elementId) {
      const element = document.getElementById(elementId);
      element.style.opacity = 1;
    }
    
    // Schedule the first phase messages to appear
    setTimeout(() => showMessage('message1', 'counter1'), 500);   // First message appears after 0.5s
    setTimeout(() => showMessage('message2', 'counter2'), 5500);  // Second message appears after 5.5s
    setTimeout(() => showMessage('message3', null), 10500);       // Third message appears after 10.5s
    
    // Fade out first container after all messages shown
    setTimeout(() => hideElement('first-container'), 16000);      // First container fades out after 16s
    
    // Show second container and fade in second phase messages
    setTimeout(() => {
      showElement('second-container');
      setTimeout(() => showMessage('message4', null), 500);       // First second-phase message
      setTimeout(() => showMessage('message5', null), 5500);      // Second second-phase message
      setTimeout(() => showMessage('message6', null), 10500);     // Third second-phase message
    }, 18000);  // Start second phase after 18s (2s after first container fades out)
  });
</script>
::: -->

---
format:
  html:
    css: styles.css
page-layout: full
---

::: {=html}
<style>
body {
  background-color: black;
  color: white;
  font-family: sans-serif;
  margin: 0;
  padding: 0;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  overflow: hidden;
  transition: background-color 2s ease-in-out;
}

.container {
  max-width: 800px;
  padding: 2em;
  display: flex;
  flex-direction: column;
  gap: 1.5em;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.counter {
  font-size: 3em;
  color: #e32d2d;
  font-weight: bold;
  display: inline;
  line-height: 1.2;
}

.message {
  font-size: 1.8em;
  opacity: 0;
  transition: opacity 1.5s ease-in;
}

#first-container, #second-container {
  transition: opacity 2s ease-in-out;
  width: 100%;
}

.second-phase {
  line-height: 1.6;
}

#background-container {
  width: 100%;
  height: 100vh;
  transition: opacity 2s ease-in-out;
  position: absolute;
  top: 0;
  left: 0;
  overflow-y: auto;
  background-color: #fca7a7;
}

.bg-title {
  font-size: 2.5em;
  color: black;
  text-align: center;
  margin-top: 1.5em;
  margin-bottom: 0.2em;
}

.bg-subtitle {
  font-size: 1.8em;
  color: black;
  text-align: center;
  margin-bottom: 2em;
  font-weight: normal;
}

.bg-content {
  color: black;
  max-width: 800px;
  margin: 0 auto;
  padding: 0 2em 4em 2em;
}

.bg-info {
  text-align: left;
}

.bg-info h3 {
  font-size: 1.5em;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  border-bottom: 1px solid rgba(0,0,0,0.2);
  padding-bottom: 0.3em;
}

.bg-info ul {
  padding-left: 2em;
  margin-bottom: 1.5em;
  list-style-type: disc;
}

.bg-info li {
  margin-bottom: 0.5em;
  padding-left: 0.5em;
}

.navbar {
  background-color: black !important;
  transition: background-color 2s ease-in-out;
}

.navbar-title, .nav-link, ._site {
  color: #e32d2d !important;
  transition: color 2s ease-in-out;
}

.navbar-title:hover, .nav-link:hover {
  color: #ff6b6b !important;
}

.navbar-logo {
  filter: invert(1);
  transition: filter 2s ease-in-out;
}
</style>

<div class="container" id="first-container">
  <p class="message" id="message1">
    Since 1997, <span class="counter" id="counter1">0</span> humanitarian aid workers have been affected by violence against aid workers.
  </p>
  
  <p class="message" id="message2">
    But <span class="counter" id="counter2">0</span> total people have been affected.
  </p>
  
  <p class="message" id="message3">
    These acts of violence do not only hurt selfless humanitarian aid workers. At a greater scale, they hurt innocent civilians.
  </p>
</div>

<div class="container" id="second-container" style="opacity: 0;">
  <p class="message second-phase" id="message4">
    Limited resources have long prevented global organizations from fully capturing the truth behind attacks on humanitarian missions.
  </p>
  
  <p class="message second-phase" id="message5">
    But behind every missing detail is a missed opportunity to prepare, to protect, to prevent.
  </p>
  
  <p class="message second-phase" id="message6">
    To minimize the harm, we must uncover the patterns hidden in the data—and come together, as a global force, to turn insight into action.
  </p>
</div>

<div id="background-container" style="opacity: 0; display: none;">
  <div class="bg-content">
    <h1 class="bg-title">Uncovering the Unknown - Insights into Violence Against Humanitarian Aid</h1>
    <h2 class="bg-subtitle">Background and Context</h2>

    <div class="bg-info">
      <h3>Data Source</h3>
      <p>The Aid Worker Security Database (AWSD) documents instances of 'major violence' against aid workers, which includes:</p>
      <ul>
        <li>Kidnapping</li>
        <li>Killing</li>
        <li>Wounding (serious injury requiring medical attention)</li>
        <li>Rape and sexual assault</li>
      </ul>
      
      <h3>Definition of Aid Workers</h3>
      <p>Aid workers are defined as employees and associated personnel (both paid and volunteer) of nonprofit aid agencies providing material and technical assistance in humanitarian contexts. This encompasses:</p>
      <ul>
        <li>National and international NGOs</li>
        <li>Local volunteer groups</li>
        <li>International Red Cross/Red Crescent Movement</li>
        <li>Donor agencies</li>
        <li>UN agencies within the Inter-Agency Standing Committee on Humanitarian Affairs (FAO, OCHA, UNDP, UNFPA, UNHCR, UNICEF, UN-Habitat, WFP and WHO)</li>
        <li>IOM, UNRWA, UNMAS, and when relevant, the World Bank</li>
      </ul>
      
      <p>This definition includes locally contracted staff like drivers and security guards. It also covers contracted workers and vendors of humanitarian organizations when they are affected by violence while supporting humanitarian missions.</p>
      
      <p>The definition excludes UN peacekeeping personnel, human rights workers, election monitors, and organizations focused solely on political, religious, or advocacy work.</p>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/countup.js@2.0.7/dist/countUp.umd.js"></script>
<script>
  document.addEventListener("DOMContentLoaded", function() {
    // Set up counters
    const counter1 = new countUp.CountUp('counter1', 766, {
      startVal: 1,
      duration: 3,
      separator: ',',
      useEasing: true
    });
    
    const counter2 = new countUp.CountUp('counter2', 7316, {
      startVal: 1,
      duration: 3,
      separator: ',',
      useEasing: true
    });
    
    // Function to show message and start counter if it has one
    function showMessage(messageId, counterId) {
      const message = document.getElementById(messageId);
      message.style.opacity = 1;
      
      if (counterId) {
        const counter = counterId === 'counter1' ? counter1 : counter2;
        if (!counter.error) {
          counter.start();
        } else {
          console.error(counter.error);
        }
      }
    }
    
    // Function to hide element
    function hideElement(elementId) {
      const element = document.getElementById(elementId);
      element.style.opacity = 0;
    }
    
    // Function to show element
    function showElement(elementId) {
      const element = document.getElementById(elementId);
      element.style.opacity = 1;
      if (elementId === 'background-container') {
        element.style.display = 'block';
      }
    }
    
    // Function to change background color
    function changeBackgroundColor(color) {
      document.body.style.backgroundColor = color;
      
      // Also update navbar colors if background changes to light color
      if (color === '#fca7a7') {
        const navbar = document.querySelector('.navbar');
        if (navbar) {
          navbar.style.backgroundColor = '#fca7a7';
          
          const navLinks = document.querySelectorAll('.navbar-title, .nav-link, ._site');
          navLinks.forEach(link => {
            link.style.color = 'black';
          });
          
          const logo = document.querySelector('.navbar-logo');
          if (logo) {
            logo.style.filter = 'none';
          }
        }
      }
    }
    
    // Wait for the document to be fully loaded, including stylesheets
    window.addEventListener('load', function() {
      // Add class to body for index-specific styling
      document.body.classList.add('index-page');
    
    // Schedule the first phase messages to appear
    setTimeout(() => showMessage('message1', 'counter1'), 500);   // First message appears after 0.5s
    setTimeout(() => showMessage('message2', 'counter2'), 5500);  // Second message appears after 5.5s
    setTimeout(() => showMessage('message3', null), 10500);       // Third message appears after 10.5s
    
    // Fade out first container after all messages shown
    setTimeout(() => hideElement('first-container'), 16000);      // First container fades out after 16s
    
    // Show second container and fade in second phase messages
    setTimeout(() => {
      showElement('second-container');
      setTimeout(() => showMessage('message4', null), 500);       // First second-phase message
      setTimeout(() => showMessage('message5', null), 5500);      // Second second-phase message
      setTimeout(() => showMessage('message6', null), 10500);     // Third second-phase message
      
      // Fade out second container after all second-phase messages shown
      setTimeout(() => hideElement('second-container'), 16000);   // Second container fades out after 16s
      
      // Redirect to background.qmd page after animations
      setTimeout(() => {
        window.location.href = 'background.html';
      }, 18000);  // Redirect after 18s (2s after second container fades out)
    }, 18000);  // Start second phase after 18s (2s after first container fades out)
    });
  });
</script>
:::