[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "analysis/tables.html",
    "href": "analysis/tables.html",
    "title": "Violence Against Humanitarian Aid",
    "section": "",
    "text": "Code\nimport pandas as pd\nimport numpy as np\nfrom IPython.display import display, HTML\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import to_rgba\nimport seaborn as sns\n\ndf = pd.read_csv('../data/cleaned_security_incidents.csv')\n\n\n\n\nCode\n# Function to create styled tables with \"Unknown\" highlighted in red\ndef create_styled_table(series_counts, title):\n    # Convert to DataFrame for styling\n    df_counts = series_counts.reset_index()\n    df_counts.columns = ['Category', 'Count']\n    \n    # Define styling function\n    def highlight_unknown(row):\n        # Check if the category contains any form of \"unknown\" (case insensitive)\n        if ('unknown' in str(row['Category']).lower()):\n            return ['background-color: rgba(255, 0, 0, 0.2)']*len(row)\n        else:\n            return ['background-color: transparent']*len(row)\n    \n    # Apply styling\n    styled_df = df_counts.style.apply(highlight_unknown, axis=1)\n    \n    # Add title and other formatting\n    styled_df = styled_df.set_caption(title).set_table_styles([\n        {'selector': 'caption', 'props': [('font-weight', 'bold'), \n                                         ('font-size', '1.1em'),\n                                         ('text-align', 'center')]},\n        {'selector': 'th', 'props': [('text-align', 'center'), \n                                    ('background-color', '#f2f2f2')]},\n        {'selector': 'td', 'props': [('text-align', 'center')]}\n    ])\n    \n    return styled_df\n\n# Get value counts for each category\nmeans_counts = df['means_of_attack'].value_counts()\ncontext_counts = df['attack_context'].value_counts()\nactor_counts = df['actor_type'].value_counts()\nmotive_counts = df['motive'].value_counts()\n\n# Create styled tables\nstyled_means = create_styled_table(means_counts, 'Means of Attack')\nstyled_context = create_styled_table(context_counts, 'Attack Context')\nstyled_actor = create_styled_table(actor_counts, 'Actor Type')\nstyled_motive = create_styled_table(motive_counts, 'Motive')\n\n# Display tables in a 2x2 grid using grid_items from IPython\nfrom IPython.display import display, HTML\n\n# Create a more explicit grid structure with inline HTML\ngrid_html = \"\"\"\n&lt;style&gt;\n    .grid-container {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        grid-gap: 20px;\n        width: 100%;\n    }\n    .grid-item {\n        width: 100%;\n    }\n&lt;/style&gt;\n\n&lt;div class=\"grid-container\"&gt;\n    &lt;div class=\"grid-item\" id=\"table1\"&gt;&lt;/div&gt;\n    &lt;div class=\"grid-item\" id=\"table2\"&gt;&lt;/div&gt;\n    &lt;div class=\"grid-item\" id=\"table3\"&gt;&lt;/div&gt;\n    &lt;div class=\"grid-item\" id=\"table4\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n\"\"\"\n\n# First display the grid structure\ndisplay(HTML(grid_html))\n\n# Then inject each table into its respective grid cell using JavaScript\nfor i, (table_id, styled_table) in enumerate([\n    (\"table1\", styled_means),\n    (\"table2\", styled_actor),\n    (\"table3\", styled_context),\n    (\"table4\", styled_motive)\n]):\n    # Convert styled table to HTML and inject into the grid\n    table_html = styled_table.to_html()\n    display(HTML(f\"\"\"\n    &lt;script&gt;\n        document.getElementById(\"{table_id}\").innerHTML = `{table_html}`;\n    &lt;/script&gt;\n    \"\"\"))\n\n# Alternative approach that works well in most Jupyter environments\nfrom IPython.display import display_html\nfrom IPython.core.display import HTML, display\n\ndef display_side_by_side(dfs, captions=None):\n    \"\"\"Display tables side by side in Jupyter.\"\"\"\n    if captions is None:\n        captions = [''] * len(dfs)\n    \n    output = \"\"\n    for df, caption in zip(dfs, captions):\n        output += '&lt;div style=\"flex: 50%; padding: 5px;\"&gt;'\n        output += f'&lt;h4 style=\"text-align: center;\"&gt;{caption}&lt;/h4&gt;'\n        output += df.to_html()\n        output += '&lt;/div&gt;'\n    \n    display_html(HTML('&lt;div style=\"display: flex; flex-wrap: wrap;\"&gt;'+output+'&lt;/div&gt;'))\n\n# Uncommenting this will provide another option if the grid approach doesn't work\n\"\"\"\nprint(\"Top Row:\")\ndisplay_side_by_side([styled_means, styled_context], \n                    captions=['Means of Attack', 'Attack Context'])\n\nprint(\"Bottom Row:\")\ndisplay_side_by_side([styled_actor, styled_motive], \n                    captions=['Actor Type', 'Motive'])\n\"\"\"\n\n# Alternative approach using Matplotlib and Seaborn for better control of layout\n# This is another option if you prefer plots over HTML tables\n\ndef plot_count_tables(df, variables, titles, nrows=2, ncols=2, figsize=(12, 10)):\n    fig, axes = plt.subplots(nrows=nrows, ncols=ncols, figsize=figsize)\n    axes = axes.flatten()\n    \n    for i, (var, title) in enumerate(zip(variables, titles)):\n        counts = df[var].value_counts().reset_index()\n        counts.columns = ['Category', 'Count']\n        \n        # Create bar plot\n        sns.barplot(x='Category', y='Count', data=counts, ax=axes[i], color='skyblue')\n        \n        # Highlight Unknown in red if present\n        if 'Unknown' in counts['Category'].values:\n            unknown_idx = counts[counts['Category'] == 'Unknown'].index[0]\n            unknown_bar = axes[i].patches[unknown_idx]\n            unknown_bar.set_facecolor('red')\n            unknown_bar.set_alpha(0.7)\n        \n        # Customize plot\n        axes[i].set_title(title, fontsize=12, fontweight='bold')\n        axes[i].tick_params(axis='x', rotation=45)\n        axes[i].set_xlabel('')\n        \n    plt.tight_layout()\n    plt.show()\n\n# Uncomment to use the matplotlib/seaborn approach\n'''\nplot_count_tables(\n    df,\n    variables=['means_of_attack', 'attack_context', 'actor_type', 'motive'],\n    titles=['Means of Attack', 'Attack Context', 'Actor Type', 'Motive']\n)\n'''\n\n\n\n\n\n\n    \n    \n    \n    \n\n\n\n\n    \n    \n\n\n\n    \n    \n\n\n\n    \n    \n\n\n\n    \n    \n\n\n/var/folders/vs/3j3cdp2s1nn0lr6x50_9ycj00000gn/T/ipykernel_23155/2276398257.py:87: DeprecationWarning: Importing display from IPython.core.display is deprecated since IPython 7.14, please import from IPython.display\n  from IPython.core.display import HTML, display\n\n\n\"\\nplot_count_tables(\\n    df,\\n    variables=['means_of_attack', 'attack_context', 'actor_type', 'motive'],\\n    titles=['Means of Attack', 'Attack Context', 'Actor Type', 'Motive']\\n)\\n\""
  },
  {
    "objectID": "background.html",
    "href": "background.html",
    "title": "Uncovering the Unknown - Insights into Violence Against Humanitarian Aid",
    "section": "",
    "text": "The Aid Worker Security Database (AWSD) documents instances of ‘major violence’ against aid workers, which includes:\n\nKidnapping\nKilling\nWounding (serious injury requiring medical attention)\nRape and sexual assault"
  },
  {
    "objectID": "background.html#data-source",
    "href": "background.html#data-source",
    "title": "Uncovering the Unknown - Insights into Violence Against Humanitarian Aid",
    "section": "",
    "text": "The Aid Worker Security Database (AWSD) documents instances of ‘major violence’ against aid workers, which includes:\n\nKidnapping\nKilling\nWounding (serious injury requiring medical attention)\nRape and sexual assault"
  },
  {
    "objectID": "background.html#definition-of-aid-workers",
    "href": "background.html#definition-of-aid-workers",
    "title": "Uncovering the Unknown - Insights into Violence Against Humanitarian Aid",
    "section": "Definition of Aid Workers",
    "text": "Definition of Aid Workers\nAid workers are defined as employees and associated personnel (both paid and volunteer) of nonprofit aid agencies providing material and technical assistance in humanitarian contexts. This encompasses:\n\nNational and international NGOs\nLocal volunteer groups\nInternational Red Cross/Red Crescent Movement\nDonor agencies\nUN agencies within the Inter-Agency Standing Committee on Humanitarian Affairs (FAO, OCHA, UNDP, UNFPA, UNHCR, UNICEF, UN-Habitat, WFP and WHO)\nIOM, UNRWA, UNMAS, and when relevant, the World Bank\n\nThis definition includes locally contracted staff like drivers and security guards. It also covers contracted workers and vendors of humanitarian organizations when they are affected by violence while supporting humanitarian missions.\nThe definition excludes UN peacekeeping personnel, human rights workers, election monitors, and organizations focused solely on political, religious, or advocacy work."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Uncovering the Unknown - Insights into Violence Against Humanitarian Aid",
    "section": "",
    "text": "Violence Against Humanitarian...\n  \n    Home\n    Background & Context\n    Analysis\n  \n\n\n\n\n  \n    Since 1997, 0 humanitarian aid workers have been affected by violence against aid workers.\n  \n  \n  \n    \n      0\n      killed\n    \n    \n      0\n      wounded\n    \n    \n      0\n      kidnapped\n    \n  \n\n\n\n\n  \n    Limited resources have long prevented global organizations from fully capturing the truth behind attacks on humanitarian missions.\n  \n  \n  \n    But behind every missing detail is a missed opportunity to prepare, to protect, to prevent.\n  \n  \n  \n    To minimize the harm, we must uncover the patterns hidden in the data—and come together, as a global force, to turn insight into action.\n  \n\n\n\n\n  \n    \n    Background and Context\n\n    \n      Data Source\n      The Aid Worker Security Database (AWSD) documents instances of 'major violence' against aid workers, which includes:\n      \n        Kidnapping\n        Killing\n        Wounding (serious injury requiring medical attention)\n        Rape and sexual assault\n      \n      \n      Definition of Aid Workers\n      Aid workers are defined as employees and associated personnel (both paid and volunteer) of nonprofit aid agencies providing material and technical assistance in humanitarian contexts. This encompasses:\n      \n        National and international NGOs\n        Local volunteer groups\n        International Red Cross/Red Crescent Movement\n        Donor agencies\n        UN agencies within the Inter-Agency Standing Committee on Humanitarian Affairs (FAO, OCHA, UNDP, UNFPA, UNHCR, UNICEF, UN-Habitat, WFP and WHO)\n        IOM, UNRWA, UNMAS, and when relevant, the World Bank\n      \n      \n      This definition includes locally contracted staff like drivers and security guards. It also covers contracted workers and vendors of humanitarian organizations when they are affected by violence while supporting humanitarian missions.\n      \n      The definition excludes UN peacekeeping personnel, human rights workers, election monitors, and organizations focused solely on political, religious, or advocacy work."
  }
]